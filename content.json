{"meta":{"title":"Drago-Blog","subtitle":"","description":"","author":"He Yaojie","url":"https://www.hyj-git.icu","root":"/"},"pages":[{"title":"guestbook","date":"2020-06-15T01:49:25.000Z","updated":"2020-06-15T01:50:15.182Z","comments":true,"path":"guestbook/index.html","permalink":"https://www.hyj-git.icu/guestbook/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-06-18T07:58:35.381Z","updated":"2020-06-18T07:58:35.381Z","comments":true,"path":"about/index.html","permalink":"https://www.hyj-git.icu/about/index.html","excerpt":"","text":"你好呀"},{"title":"所有分类","date":"2020-06-18T08:00:26.200Z","updated":"2020-06-18T08:00:26.200Z","comments":true,"path":"categories/index.html","permalink":"https://www.hyj-git.icu/categories/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-06-18T08:01:44.965Z","updated":"2020-06-18T08:01:44.965Z","comments":true,"path":"tags/index.html","permalink":"https://www.hyj-git.icu/tags/index.html","excerpt":"","text":""},{"title":"同志们","date":"2020-06-26T08:35:06.234Z","updated":"2020-06-26T08:35:06.234Z","comments":true,"path":"friends/index.html","permalink":"https://www.hyj-git.icu/friends/index.html","excerpt":"","text":""},{"title":"404 Not Found","date":"2020-06-18T11:48:11.288Z","updated":"2020-06-18T11:48:11.288Z","comments":true,"path":"404.html","permalink":"https://www.hyj-git.icu/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"}],"posts":[{"title":"Hexo-博客搭建","slug":"Hexo-博客搭建","date":"2020-06-26T09:07:12.000Z","updated":"2020-06-26T11:26:33.427Z","comments":true,"path":"2020/06/26/Hexo-博客搭建/","link":"","permalink":"https://www.hyj-git.icu/2020/06/26/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","excerpt":"Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。","text":"Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 -- 前言本篇是根据 Github Pages 和 Hexo 搭建个人博客教程！ -- 安装Node.js访问Node.js官网，下载相应版本安装。 -- 安装Git访问Git官网，下载相应版本安装。 -- 查看是否安装成功在windows中打开cmd命令窗口，输入一下命令，若有版本信息则安装成功，在桌面点击鼠标右键则可看到菜单里的 Git GUI Here 和 Git Bash Here选项。 123git --version node -V npm -V {% p left h1 red, -- 安装 Hexo %}选择一个磁盘，新建一个文件夹并命名（如：我的文件夹为：E:\\TRHX_Blog），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 Git Bash Here，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功。 12npm install hexo-cli -g npm install hexo-deployer-git --save -- Hexo 初始化配置在刚才新建的文件夹里面再次新建一个 Hexo 文件夹（如：我的文件夹为：E:\\TRHX_Blog\\Hexo）,进入该 Hexo 文件夹右键鼠标，点击 Git Bash Here，输入以下命令，如图所示则安装成功 1hexo init Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下： {% p left h1 red, -- 查看本地效果 %}执行以下命令，执行完即可登录 http://localhost:4000/ 查看效果 12hexo g hexo s -- 将博客部署到 Github Pages 上到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上 一、注册 Github 账户：点此访问访问 Github 官网，点击 Sign Up 注册账户 二、创建项目代码库：点击 New repository 开始创建，步骤及注意事项见图： 三、配置 SSH 密钥：只有配置好 SSH 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：E:\\TRHX_Blog） Git Bash Here 输入以下命令： 12ssh-keygen -t rsa -C &quot;your email@example.com&quot; &#x2F;&#x2F;引号里面填写你的邮箱地址 之后会出现： 123Generating public&#x2F;private rsa key pair. Enter file in which to save the key (C:\\Users\\22726\\.ssh\\id_rsa): &#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储 然后会出现： 123Enter passphrase (empty for no passphrase): &#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行 Enter same passphrase again: 接着： 123456Your identification has been saved in C:\\Users\\22726\\.ssh\\id_rsa. Your public key has been saved in C:\\Users\\22726\\.ssh\\id_rsa.pub. The key fingerprint is: &#x2F;&#x2F;这里是各种字母数字组成的字符串，结尾是你的邮箱 The key&#39;s randomart image is: &#x2F;&#x2F;这里也是各种字母数字符号组成的字符串 运行以下命令，将公钥的内容复制到系统粘贴板上： 1clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub 四、在 GitHub 账户中添加你的公钥 1.登陆 GitHub，点击右上角进入 Settings： 2.点击 SSH and GPG Keys： 3.选择 New SSH key： 4.粘贴密钥： 五、测试 输入以下命令：注意：{% span blue, git@github.com %}不要做任何更改！ 1ssh -T git@github.com 之后会显示： 输入 yes 后会显示： 此时表示设置正确 六、配置 Git 个人信息 Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub 一致 12git config --global user.name &quot;此处填你的用户名&quot; git config --global user.email &quot;此处填你的邮箱&quot; 到此为止 SSH Key 配置成功，本机已成功连接到 Github {% p left h1 red, -- 将本地的 Hexo 文件更新到 Github 的库中 %}一、登录 Github 打开自己的项目 yourname.github.io 二、鼠标移到 Clone 按钮，选择 Use SSH 三、点击复制地址 四、打开你创建的 Hexo 文件夹（如：E:\\TRHX_Blog\\Hexo），右键用记事本（或者Notepad++、Vs Code等）打开该文件夹下的 _config.yml 文件 五、按下图修改 _config.yml 文件并保存 六、在 Hexo 文件夹下分别执行以下命令 12hexo g hexo d 执行完之后会让你输入你的 Github 的账号和密码,如果此时报以下错误，说明你的 deployer 没有安装成功 1ERROR Deployer not found: git 需要执行以下命令再安装一次： 1npm install hexo-deployer-git --save 再执行 hexo g -d，你的博客就会部署到 Github 上了 七、访问博客 你的博客地址：https://你的用户名.github.io，比如我的是：https://trhx-h.github.io ，现在每个人都可以通过此链接访问你的博客了","categories":[],"tags":[]},{"title":"加油吧！少年！","slug":"加油！","date":"2020-06-18T09:30:12.000Z","updated":"2020-06-18T11:10:45.769Z","comments":true,"path":"2020/06/18/加油！/","link":"","permalink":"https://www.hyj-git.icu/2020/06/18/%E5%8A%A0%E6%B2%B9%EF%BC%81/","excerpt":"","text":"加油吧！少年！ “我们有幸 遇见这样的时代 但时代更有幸 遇见这样的我们”","categories":[],"tags":[]},{"title":"(开篇)Python之MyQR 二维码制作","slug":"(开篇)Python之MyQR 二维码制作","date":"2020-06-16T07:26:38.000Z","updated":"2020-06-18T10:30:55.646Z","comments":true,"path":"2020/06/16/(开篇)Python之MyQR 二维码制作/","link":"","permalink":"https://www.hyj-git.icu/2020/06/16/(%E5%BC%80%E7%AF%87)Python%E4%B9%8BMyQR%20%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%88%B6%E4%BD%9C/","excerpt":"","text":"MyQR概述MyQR是Python中的一个制作二维码的函数库。它可以将你的某个链接或句子生成一个有趣的二维码，而且可以美化二维码。 MyQR安装MyQR不支持python 2,所以需要在python 3命令行下执行如下命令 1pip install MyQR MyQR使用MyQR引用参数为from MyQR import myqr ,它有如下参数： words：二维码内容，链接或句子 version：二维码大小，范围为[1,40] level：二维码纠错级别，范围为{L,M,Q,H}，H为最高级 picture：自定义二维码背景图，支持格式为 .jpg，.png，.bmp，.gif，默认为黑白色 colorized：二维码背景颜色，默认为 False，即黑白色 contrast：对比度，值越高对比度越高，默认为 1.0 brightness：亮度，值越高亮度越高，默认为 1.0，值常和对比度相同 save_name：二维码名称，默认为 qrcode.png save_dir：二维码路径，默认为程序工作路径 MyQR实例普通二维码1234from MyQR import myqrmyqr.run(words='https://www.hyj-git.icu', save_name='myblog.png', save_dir=r'C:\\Users\\22726\\Desktop') 带图二维码可以使用静态图片作为二维码背景 12345from MyQR import myqrmyqr.run(words='https://www.hyj-git.icu/', picture=r'C:\\Users\\22726\\Desktop\\python\\monkey.png',colorized=True, save_name='myblog1.png', save_dir=r'C:\\Users\\22726\\Desktop') 动态二维码也可以使用动态gif图片作为二维码背景生成动态二维码 12345from MyQR import myqrmyqr.run(words='https://www.hyj-git.icu/', picture=r'C:\\Users\\22726\\Desktop\\python\\kong.gif',colorized=True, save_name='myblog2.gif', save_dir=r'C:\\Users\\22726\\Desktop') ​ ​ 制作你的精美炫酷二维码吧！！！","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://www.hyj-git.icu/tags/Python/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-06-14T03:04:59.646Z","updated":"2020-06-14T03:04:59.646Z","comments":true,"path":"2020/06/14/hello-world/","link":"","permalink":"https://www.hyj-git.icu/2020/06/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://www.hyj-git.icu/tags/Python/"}]}